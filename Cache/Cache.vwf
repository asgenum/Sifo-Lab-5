/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("address")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("address[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address_stroki")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("address_stroki[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address_stroki";
}

SIGNAL("address_stroki[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address_stroki";
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("compar_bus")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("compar_bus[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "compar_bus";
}

SIGNAL("compar_bus[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "compar_bus";
}

SIGNAL("control")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("control[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("DCa")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("hit/miss")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUT_CPU")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUT_CPU[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT_CPU";
}

SIGNAL("OUT_CPU[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT_CPU";
}

SIGNAL("OUT_CPU[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT_CPU";
}

SIGNAL("OUT_CPU[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT_CPU";
}

SIGNAL("OUT_CPU[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT_CPU";
}

SIGNAL("OUT_CPU[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT_CPU";
}

SIGNAL("out_stroka_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 48;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_stroka_0[47]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[46]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[45]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[44]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[43]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[42]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[41]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[40]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_0";
}

SIGNAL("out_stroka_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 48;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_stroka_1[47]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[46]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[45]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[44]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[43]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[42]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[41]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[40]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_1";
}

SIGNAL("out_stroka_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 48;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_stroka_2[47]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[46]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[45]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[44]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[43]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[42]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[41]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[40]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_2";
}

SIGNAL("out_stroka_3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 48;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_stroka_3[47]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[46]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[45]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[44]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[43]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[42]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[41]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[40]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("out_stroka_3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_stroka_3";
}

SIGNAL("tag_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("tag_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_0";
}

SIGNAL("tag_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_0";
}

SIGNAL("tag_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_0";
}

SIGNAL("tag_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_0";
}

SIGNAL("tag_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_0";
}

SIGNAL("tag_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_0";
}

SIGNAL("tag_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("tag_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_1";
}

SIGNAL("tag_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_1";
}

SIGNAL("tag_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_1";
}

SIGNAL("tag_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_1";
}

SIGNAL("tag_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_1";
}

SIGNAL("tag_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_1";
}

SIGNAL("tag_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("tag_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_2";
}

SIGNAL("tag_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_2";
}

SIGNAL("tag_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_2";
}

SIGNAL("tag_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_2";
}

SIGNAL("tag_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_2";
}

SIGNAL("tag_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_2";
}

SIGNAL("tag_3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("tag_3[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_3";
}

SIGNAL("tag_3[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_3";
}

SIGNAL("tag_3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_3";
}

SIGNAL("tag_3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_3";
}

SIGNAL("tag_3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_3";
}

SIGNAL("tag_3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_3";
}

SIGNAL("counter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("counter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("address[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("address[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("address[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("address[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 680.0;
		LEVEL 1 FOR 320.0;
	}
}

TRANSITION_LIST("address[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("address[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 170.0;
		}
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 150.0;
	}
}

TRANSITION_LIST("address[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 130.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("address[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("address[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 100.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("address_stroki[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 510.0;
		LEVEL 0 FOR 230.0;
	}
}

TRANSITION_LIST("address_stroki[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 170.0;
			LEVEL 0 FOR 170.0;
		}
		LEVEL 1 FOR 170.0;
		LEVEL 0 FOR 60.0;
	}
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("compar_bus[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 430.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 90.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 150.0;
	}
}

TRANSITION_LIST("compar_bus[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 260.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 60.0;
	}
}

TRANSITION_LIST("control[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 60.0;
	}
}

TRANSITION_LIST("control[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 60.0;
	}
}

TRANSITION_LIST("control[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("control[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 60.0;
	}
}

TRANSITION_LIST("control[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 60.0;
	}
}

TRANSITION_LIST("data[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 90.0;
			LEVEL Z FOR 80.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 80.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 90.0;
		LEVEL Z FOR 60.0;
	}
}

TRANSITION_LIST("data[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 90.0;
			LEVEL Z FOR 80.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 80.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 90.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 60.0;
	}
}

TRANSITION_LIST("data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 80.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 80.0;
			LEVEL Z FOR 80.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 80.0;
		LEVEL Z FOR 60.0;
	}
}

TRANSITION_LIST("data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 40.0;
			LEVEL Z FOR 80.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 60.0;
	}
}

TRANSITION_LIST("data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 5;
			LEVEL Z FOR 80.0;
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL Z FOR 60.0;
	}
}

TRANSITION_LIST("data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL Z FOR 80.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
	}
}

TRANSITION_LIST("DCa[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DCa[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
	}
}

TRANSITION_LIST("DCa[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
	}
}

TRANSITION_LIST("DCa[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
	}
}

TRANSITION_LIST("DCa[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
	}
}

TRANSITION_LIST("DCa[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
	}
}

TRANSITION_LIST("DCa[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 110.0;
	}
}

TRANSITION_LIST("DCa[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 120.0;
	}
}

TRANSITION_LIST("DCa[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 130.0;
	}
}

TRANSITION_LIST("DCa[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 140.0;
	}
}

TRANSITION_LIST("hit/miss")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 90.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 60.0;
	}
}

TRANSITION_LIST("OUT_CPU[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 4;
			LEVEL Z FOR 90.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL Z FOR 90.0;
		LEVEL 1 FOR 80.0;
		LEVEL Z FOR 90.0;
		LEVEL 1 FOR 60.0;
	}
}

TRANSITION_LIST("OUT_CPU[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 90.0;
			LEVEL 0 FOR 80.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 90.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 60.0;
	}
}

TRANSITION_LIST("OUT_CPU[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 90.0;
			LEVEL 0 FOR 80.0;
			LEVEL Z FOR 90.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 90.0;
		LEVEL 1 FOR 60.0;
	}
}

TRANSITION_LIST("OUT_CPU[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL Z FOR 90.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("OUT_CPU[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL Z FOR 90.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("OUT_CPU[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 4;
			LEVEL Z FOR 90.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL Z FOR 90.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL Z FOR 90.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("out_stroka_0[47]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[46]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[45]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[44]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 915.0;
	}
}

TRANSITION_LIST("out_stroka_0[43]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 915.0;
	}
}

TRANSITION_LIST("out_stroka_0[42]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 915.0;
	}
}

TRANSITION_LIST("out_stroka_0[41]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[40]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[39]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[38]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 925.0;
	}
}

TRANSITION_LIST("out_stroka_0[37]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 925.0;
	}
}

TRANSITION_LIST("out_stroka_0[36]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[35]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[34]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[33]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[32]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 935.0;
	}
}

TRANSITION_LIST("out_stroka_0[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 935.0;
	}
}

TRANSITION_LIST("out_stroka_0[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 945.0;
	}
}

TRANSITION_LIST("out_stroka_0[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 955.0;
	}
}

TRANSITION_LIST("out_stroka_0[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 955.0;
	}
}

TRANSITION_LIST("out_stroka_0[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 965.0;
	}
}

TRANSITION_LIST("out_stroka_0[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 975.0;
	}
}

TRANSITION_LIST("out_stroka_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[47]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 935.0;
		LEVEL 1 FOR 65.0;
	}
}

TRANSITION_LIST("out_stroka_1[46]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[45]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 255.0;
		LEVEL 1 FOR 745.0;
	}
}

TRANSITION_LIST("out_stroka_1[44]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 255.0;
		LEVEL 1 FOR 745.0;
	}
}

TRANSITION_LIST("out_stroka_1[43]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 255.0;
		LEVEL 1 FOR 745.0;
	}
}

TRANSITION_LIST("out_stroka_1[42]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 255.0;
		LEVEL 1 FOR 745.0;
	}
}

TRANSITION_LIST("out_stroka_1[41]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 925.0;
		LEVEL 1 FOR 75.0;
	}
}

TRANSITION_LIST("out_stroka_1[40]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[39]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 245.0;
		LEVEL 1 FOR 755.0;
	}
}

TRANSITION_LIST("out_stroka_1[38]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 245.0;
		LEVEL 1 FOR 755.0;
	}
}

TRANSITION_LIST("out_stroka_1[37]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 245.0;
		LEVEL 1 FOR 755.0;
	}
}

TRANSITION_LIST("out_stroka_1[36]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[35]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 915.0;
		LEVEL 1 FOR 85.0;
	}
}

TRANSITION_LIST("out_stroka_1[34]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[33]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 235.0;
		LEVEL 1 FOR 765.0;
	}
}

TRANSITION_LIST("out_stroka_1[32]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 235.0;
		LEVEL 1 FOR 765.0;
	}
}

TRANSITION_LIST("out_stroka_1[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 235.0;
		LEVEL 1 FOR 765.0;
	}
}

TRANSITION_LIST("out_stroka_1[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 905.0;
		LEVEL 1 FOR 95.0;
	}
}

TRANSITION_LIST("out_stroka_1[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 775.0;
	}
}

TRANSITION_LIST("out_stroka_1[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 775.0;
	}
}

TRANSITION_LIST("out_stroka_1[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 895.0;
		LEVEL 1 FOR 105.0;
	}
}

TRANSITION_LIST("out_stroka_1[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 215.0;
		LEVEL 1 FOR 785.0;
	}
}

TRANSITION_LIST("out_stroka_1[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 215.0;
		LEVEL 1 FOR 785.0;
	}
}

TRANSITION_LIST("out_stroka_1[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 215.0;
		LEVEL 1 FOR 785.0;
	}
}

TRANSITION_LIST("out_stroka_1[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 885.0;
		LEVEL 1 FOR 115.0;
	}
}

TRANSITION_LIST("out_stroka_1[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 205.0;
		LEVEL 1 FOR 795.0;
	}
}

TRANSITION_LIST("out_stroka_1[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 205.0;
		LEVEL 1 FOR 795.0;
	}
}

TRANSITION_LIST("out_stroka_1[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 875.0;
		LEVEL 1 FOR 125.0;
	}
}

TRANSITION_LIST("out_stroka_1[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 195.0;
		LEVEL 1 FOR 805.0;
	}
}

TRANSITION_LIST("out_stroka_1[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 195.0;
		LEVEL 1 FOR 805.0;
	}
}

TRANSITION_LIST("out_stroka_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 865.0;
		LEVEL 1 FOR 135.0;
	}
}

TRANSITION_LIST("out_stroka_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 185.0;
		LEVEL 1 FOR 815.0;
	}
}

TRANSITION_LIST("out_stroka_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[47]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 765.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("out_stroka_2[46]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 425.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("out_stroka_2[45]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[44]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 425.0;
		LEVEL 1 FOR 575.0;
	}
}

TRANSITION_LIST("out_stroka_2[43]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 425.0;
		LEVEL 1 FOR 575.0;
	}
}

TRANSITION_LIST("out_stroka_2[42]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 425.0;
		LEVEL 1 FOR 575.0;
	}
}

TRANSITION_LIST("out_stroka_2[41]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 755.0;
		LEVEL 1 FOR 245.0;
	}
}

TRANSITION_LIST("out_stroka_2[40]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 415.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 245.0;
	}
}

TRANSITION_LIST("out_stroka_2[39]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[38]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 415.0;
		LEVEL 1 FOR 585.0;
	}
}

TRANSITION_LIST("out_stroka_2[37]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 415.0;
		LEVEL 1 FOR 585.0;
	}
}

TRANSITION_LIST("out_stroka_2[36]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[35]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 745.0;
		LEVEL 1 FOR 255.0;
	}
}

TRANSITION_LIST("out_stroka_2[34]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 405.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 255.0;
	}
}

TRANSITION_LIST("out_stroka_2[33]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[32]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 405.0;
		LEVEL 1 FOR 595.0;
	}
}

TRANSITION_LIST("out_stroka_2[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 405.0;
		LEVEL 1 FOR 595.0;
	}
}

TRANSITION_LIST("out_stroka_2[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 735.0;
		LEVEL 1 FOR 265.0;
	}
}

TRANSITION_LIST("out_stroka_2[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 395.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 265.0;
	}
}

TRANSITION_LIST("out_stroka_2[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 395.0;
		LEVEL 1 FOR 605.0;
	}
}

TRANSITION_LIST("out_stroka_2[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 725.0;
		LEVEL 1 FOR 275.0;
	}
}

TRANSITION_LIST("out_stroka_2[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 385.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 275.0;
	}
}

TRANSITION_LIST("out_stroka_2[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 385.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("out_stroka_2[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 385.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("out_stroka_2[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 715.0;
		LEVEL 1 FOR 285.0;
	}
}

TRANSITION_LIST("out_stroka_2[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 375.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 285.0;
	}
}

TRANSITION_LIST("out_stroka_2[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 375.0;
		LEVEL 1 FOR 625.0;
	}
}

TRANSITION_LIST("out_stroka_2[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 705.0;
		LEVEL 1 FOR 295.0;
	}
}

TRANSITION_LIST("out_stroka_2[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 365.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 295.0;
	}
}

TRANSITION_LIST("out_stroka_2[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 365.0;
		LEVEL 1 FOR 635.0;
	}
}

TRANSITION_LIST("out_stroka_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 695.0;
		LEVEL 1 FOR 305.0;
	}
}

TRANSITION_LIST("out_stroka_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 355.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 305.0;
	}
}

TRANSITION_LIST("out_stroka_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[47]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[46]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 595.0;
		LEVEL 1 FOR 405.0;
	}
}

TRANSITION_LIST("out_stroka_3[45]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 595.0;
		LEVEL 1 FOR 405.0;
	}
}

TRANSITION_LIST("out_stroka_3[44]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 595.0;
		LEVEL 1 FOR 405.0;
	}
}

TRANSITION_LIST("out_stroka_3[43]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 595.0;
		LEVEL 1 FOR 405.0;
	}
}

TRANSITION_LIST("out_stroka_3[42]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 595.0;
		LEVEL 1 FOR 405.0;
	}
}

TRANSITION_LIST("out_stroka_3[41]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[40]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 585.0;
		LEVEL 1 FOR 415.0;
	}
}

TRANSITION_LIST("out_stroka_3[39]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 585.0;
		LEVEL 1 FOR 415.0;
	}
}

TRANSITION_LIST("out_stroka_3[38]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 585.0;
		LEVEL 1 FOR 415.0;
	}
}

TRANSITION_LIST("out_stroka_3[37]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 585.0;
		LEVEL 1 FOR 415.0;
	}
}

TRANSITION_LIST("out_stroka_3[36]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[35]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[34]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 575.0;
		LEVEL 1 FOR 425.0;
	}
}

TRANSITION_LIST("out_stroka_3[33]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 575.0;
		LEVEL 1 FOR 425.0;
	}
}

TRANSITION_LIST("out_stroka_3[32]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 575.0;
		LEVEL 1 FOR 425.0;
	}
}

TRANSITION_LIST("out_stroka_3[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 575.0;
		LEVEL 1 FOR 425.0;
	}
}

TRANSITION_LIST("out_stroka_3[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 565.0;
		LEVEL 1 FOR 435.0;
	}
}

TRANSITION_LIST("out_stroka_3[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 565.0;
		LEVEL 1 FOR 435.0;
	}
}

TRANSITION_LIST("out_stroka_3[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 565.0;
		LEVEL 1 FOR 435.0;
	}
}

TRANSITION_LIST("out_stroka_3[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 555.0;
		LEVEL 1 FOR 445.0;
	}
}

TRANSITION_LIST("out_stroka_3[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 555.0;
		LEVEL 1 FOR 445.0;
	}
}

TRANSITION_LIST("out_stroka_3[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 555.0;
		LEVEL 1 FOR 445.0;
	}
}

TRANSITION_LIST("out_stroka_3[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 555.0;
		LEVEL 1 FOR 445.0;
	}
}

TRANSITION_LIST("out_stroka_3[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 545.0;
		LEVEL 1 FOR 455.0;
	}
}

TRANSITION_LIST("out_stroka_3[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 545.0;
		LEVEL 1 FOR 455.0;
	}
}

TRANSITION_LIST("out_stroka_3[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 545.0;
		LEVEL 1 FOR 455.0;
	}
}

TRANSITION_LIST("out_stroka_3[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL 1 FOR 465.0;
	}
}

TRANSITION_LIST("out_stroka_3[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL 1 FOR 465.0;
	}
}

TRANSITION_LIST("out_stroka_3[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL 1 FOR 465.0;
	}
}

TRANSITION_LIST("out_stroka_3[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 525.0;
		LEVEL 1 FOR 475.0;
	}
}

TRANSITION_LIST("out_stroka_3[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 525.0;
		LEVEL 1 FOR 475.0;
	}
}

TRANSITION_LIST("out_stroka_3[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_stroka_3[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 925.0;
		LEVEL 1 FOR 75.0;
	}
}

TRANSITION_LIST("tag_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 245.0;
		LEVEL 1 FOR 755.0;
	}
}

TRANSITION_LIST("tag_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 755.0;
		LEVEL 1 FOR 245.0;
	}
}

TRANSITION_LIST("tag_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 415.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 245.0;
	}
}

TRANSITION_LIST("tag_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_3[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_3[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_3[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_3[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("tag_3[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 585.0;
		LEVEL 1 FOR 415.0;
	}
}

TRANSITION_LIST("tag_3[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 585.0;
		LEVEL 1 FOR 415.0;
	}
}

TRANSITION_LIST("counter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("counter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "address";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "address[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address_stroki";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "address_stroki[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "address_stroki[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "compar_bus";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "compar_bus[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "compar_bus[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "control";
	EXPAND_STATUS = EXPANDED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21, 22;
}

DISPLAY_LINE
{
	CHANNEL = "control[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "control[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "control[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "control[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "control[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
	CHILDREN = 24, 25, 26, 27, 28, 29;
}

DISPLAY_LINE
{
	CHANNEL = "data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "DCa";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
	CHILDREN = 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "hit/miss";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUT_CPU";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
	CHILDREN = 65, 66, 67, 68, 69, 70;
}

DISPLAY_LINE
{
	CHANNEL = "OUT_CPU[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "OUT_CPU[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "OUT_CPU[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "OUT_CPU[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "OUT_CPU[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "OUT_CPU[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
	CHILDREN = 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[47]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[46]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[45]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[44]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[43]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[42]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[41]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[40]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 0;
	CHILDREN = 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[47]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[46]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[45]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[44]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[43]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[42]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[41]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[40]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 137;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 155;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 157;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 158;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 159;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 160;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 161;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 162;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 163;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 164;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 165;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 166;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 167;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 168;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 169;
	TREE_LEVEL = 0;
	CHILDREN = 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[47]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 170;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[46]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 171;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[45]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 172;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[44]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 173;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[43]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 174;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[42]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 175;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[41]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 176;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[40]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 177;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 178;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 179;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 180;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 181;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 182;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 183;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 184;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 185;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 186;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 187;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 188;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 189;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 190;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 191;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 192;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 193;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 194;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 195;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 196;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 197;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 198;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 199;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 200;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 201;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 202;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 203;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 204;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 205;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 206;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 207;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 208;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 209;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 210;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 211;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 212;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 213;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 214;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 215;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 216;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 217;
	TREE_LEVEL = 1;
	PARENT = 169;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 218;
	TREE_LEVEL = 0;
	CHILDREN = 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[47]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 219;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[46]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 220;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[45]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 221;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[44]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 222;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[43]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 223;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[42]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 224;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[41]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 225;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[40]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 226;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 227;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 228;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 229;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 230;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 231;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 232;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 233;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 234;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 235;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 236;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 237;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 238;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 239;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 240;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 241;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 242;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 243;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 244;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 245;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 246;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 247;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 248;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 249;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 250;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 251;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 252;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 253;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 254;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 255;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 256;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 257;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 258;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 259;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 260;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 261;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 262;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 263;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 264;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 265;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "out_stroka_3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 266;
	TREE_LEVEL = 1;
	PARENT = 218;
}

DISPLAY_LINE
{
	CHANNEL = "tag_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 267;
	TREE_LEVEL = 0;
	CHILDREN = 268, 269, 270, 271, 272, 273;
}

DISPLAY_LINE
{
	CHANNEL = "tag_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 268;
	TREE_LEVEL = 1;
	PARENT = 267;
}

DISPLAY_LINE
{
	CHANNEL = "tag_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 269;
	TREE_LEVEL = 1;
	PARENT = 267;
}

DISPLAY_LINE
{
	CHANNEL = "tag_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 270;
	TREE_LEVEL = 1;
	PARENT = 267;
}

DISPLAY_LINE
{
	CHANNEL = "tag_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 271;
	TREE_LEVEL = 1;
	PARENT = 267;
}

DISPLAY_LINE
{
	CHANNEL = "tag_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 272;
	TREE_LEVEL = 1;
	PARENT = 267;
}

DISPLAY_LINE
{
	CHANNEL = "tag_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 273;
	TREE_LEVEL = 1;
	PARENT = 267;
}

DISPLAY_LINE
{
	CHANNEL = "tag_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 274;
	TREE_LEVEL = 0;
	CHILDREN = 275, 276, 277, 278, 279, 280;
}

DISPLAY_LINE
{
	CHANNEL = "tag_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 275;
	TREE_LEVEL = 1;
	PARENT = 274;
}

DISPLAY_LINE
{
	CHANNEL = "tag_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 276;
	TREE_LEVEL = 1;
	PARENT = 274;
}

DISPLAY_LINE
{
	CHANNEL = "tag_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 277;
	TREE_LEVEL = 1;
	PARENT = 274;
}

DISPLAY_LINE
{
	CHANNEL = "tag_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 278;
	TREE_LEVEL = 1;
	PARENT = 274;
}

DISPLAY_LINE
{
	CHANNEL = "tag_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 279;
	TREE_LEVEL = 1;
	PARENT = 274;
}

DISPLAY_LINE
{
	CHANNEL = "tag_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 280;
	TREE_LEVEL = 1;
	PARENT = 274;
}

DISPLAY_LINE
{
	CHANNEL = "tag_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 281;
	TREE_LEVEL = 0;
	CHILDREN = 282, 283, 284, 285, 286, 287;
}

DISPLAY_LINE
{
	CHANNEL = "tag_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 282;
	TREE_LEVEL = 1;
	PARENT = 281;
}

DISPLAY_LINE
{
	CHANNEL = "tag_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 283;
	TREE_LEVEL = 1;
	PARENT = 281;
}

DISPLAY_LINE
{
	CHANNEL = "tag_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 284;
	TREE_LEVEL = 1;
	PARENT = 281;
}

DISPLAY_LINE
{
	CHANNEL = "tag_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 285;
	TREE_LEVEL = 1;
	PARENT = 281;
}

DISPLAY_LINE
{
	CHANNEL = "tag_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 286;
	TREE_LEVEL = 1;
	PARENT = 281;
}

DISPLAY_LINE
{
	CHANNEL = "tag_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 287;
	TREE_LEVEL = 1;
	PARENT = 281;
}

DISPLAY_LINE
{
	CHANNEL = "tag_3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 288;
	TREE_LEVEL = 0;
	CHILDREN = 289, 290, 291, 292, 293, 294;
}

DISPLAY_LINE
{
	CHANNEL = "tag_3[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 289;
	TREE_LEVEL = 1;
	PARENT = 288;
}

DISPLAY_LINE
{
	CHANNEL = "tag_3[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 290;
	TREE_LEVEL = 1;
	PARENT = 288;
}

DISPLAY_LINE
{
	CHANNEL = "tag_3[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 291;
	TREE_LEVEL = 1;
	PARENT = 288;
}

DISPLAY_LINE
{
	CHANNEL = "tag_3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 292;
	TREE_LEVEL = 1;
	PARENT = 288;
}

DISPLAY_LINE
{
	CHANNEL = "tag_3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 293;
	TREE_LEVEL = 1;
	PARENT = 288;
}

DISPLAY_LINE
{
	CHANNEL = "tag_3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 294;
	TREE_LEVEL = 1;
	PARENT = 288;
}

DISPLAY_LINE
{
	CHANNEL = "counter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 295;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "counter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 296;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 465000;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 465000;
	MASTER = TRUE;
}
;
